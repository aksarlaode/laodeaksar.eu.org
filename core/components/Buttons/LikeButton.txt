import { usePostLikes } from '@/lib/usePostLikes';
import {
  Box,
  Button,
  Flex,
  keyframes,
  Spinner,
  styled
} from '@bahutara/design-system';
import { motion } from 'framer-motion';

const emojis = ['👍', '🙏', '🥰'];

// A visual component that...
// 1. Fills a heart shape with a gradient depending on the number of likes passed
// 2. Animates a thank you emoji as the number of likes increase
export const LikeButton = ({ slug }: { slug: string }) => {
  const { currentUserLikes, likes, isLoading, increment } = usePostLikes(slug);

  return (
    <Flex alignItems="center" css={{ gap: '$2' }}>
      <Button
        variant="secondary"
        onClick={() => {
          if (isLoading) return;

          increment();
        }}
      >
        <Box css={{ position: 'relative' }}>
          {/* Thank you emojis */}
          <Box
            full
            css={{
              position: 'absolute',
              textAlign: 'center',
              fontSize: '$6'
            }}
          >
            {emojis.map((item, index) => {
              return (
                <Box
                  as={motion.div}
                  key={index}
                  full
                  css={{ position: 'absolute' }}
                  // Animate each emoji when `likes` equals their index
                  animate={currentUserLikes === index + 1 ? 'show' : 'hide'}
                  variants={{
                    hide: { translateY: -80, opacity: 0 },
                    show: {
                      translateY: [0, -40, -60],
                      opacity: [0, 1, 0]
                    }
                  }}
                  initial="hide"
                >
                  {item}
                </Box>
              );
            })}
          </Box>

          {/* Heart SVG */}
          <Flex
            as={motion.div}
            alignItems="center"
            justifyContent="center"
            css={{
              position: 'relative',
              size: '$7',
              overflow: 'hidden',
              borderRadius: '$2',
              backgroundImage: `linear-gradient(
                to top left, 
                var(--laodeaksar-colors-body), 
                var(--laodeaksar-colors-foreground))
              `,
              animation: `${
                isLoading
                  ? `${pulse} 2s cubic-bezier(0.4, 0, 0.6, 1) infinite`
                  : ''
              }`
            }}
            className={`relative flex h-7 w-7 items-center justify-center overflow-hidden rounded-lg bg-gradient-to-tl from-white/5 to-white/30 ${
              isLoading && `animate-pulse`
            }`}
            // Animated onHover and onClick
            whileHover="hover"
            whileTap="active"
            variants={{
              hover: {
                scale: 1.15
              },
              active: {
                scale: 1.3
              }
            }}
          >
            <Box
              as={motion.div}
              css={{
                position: 'absolute',
                size: '$full',
                backgroundImage: `linear-gradient(
                  to top left, 
                  var(--laodeaksar-colors-brand), 
                  var(--laodeaksar-colors-secondary))
                `
              }}
              animate={String(currentUserLikes)}
              variants={{
                // 0 likes
                '0': { translateY: 25 },
                // 1 like etc
                '1': { translateY: 20 },
                '2': { translateY: 10 },
                '3': { translateY: 0 }
              }}
              initial="0"
            />

            <HeartIcon />
          </Flex>
        </Box>
      </Button>

      {/* Like counter text */}
      <Box css={{ fontSize: '$6', color: 'var(--laodeaksar-colors-brand)' }}>
        {isLoading ? <Spinner /> : <span>{likes}</span>}
      </Box>
    </Flex>
  );
};

const Svg = styled('svg', {
  position: 'relative',
  width: '$5',
  color: 'var(--laodeaksar-colors-brand)'
});

const HeartIcon = () => (
  <Svg
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 24 24"
    fill="currentColor"
  >
    <path d="M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z" />
  </Svg>
);

const pulse = keyframes({
  '0%, 100%': {
    opacity: 1
  },
  '50%': {
    opacity: 0.5
  }
});
